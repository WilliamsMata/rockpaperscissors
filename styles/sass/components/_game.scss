@use "../abstracts/variables" as *;

/* Mixin button selection */
@mixin button($name, $color) {
  .#{$name},
  .#{$name}__result {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    background: $color;
    &:hover {
      cursor: pointer;
    }
  }

  .#{$name}__result {
    width: 6rem;
    height: 6rem;

    &:hover {
      cursor: auto;
    }

    @media screen and (min-width: 48rem) {
      & {
        width: 10rem;
        height: 10rem;
      }
    }

    @media screen and (min-width: 75rem) {
      & {
        width: 15rem;
        height: 15rem;
      }
    }
  }
}

@each $name, $color in $selection-colors {
  @include button($name, $color);
}

.winner::after {
  content: "";
  position: absolute;
  width: 130%;
  height: 130%;
  z-index: -1;
  border-radius: 50%;
  background-color: rgba($color: white, $alpha: 0.1);
  animation: winner-transition 2s infinite;
}

.winner::before {
  content: "";
  position: absolute;
  width: 160%;
  height: 160%;
  z-index: -2;
  border-radius: 50%;
  background-color: rgba($color: white, $alpha: 0.05);
  animation: winner-transition 2s infinite 1s;
}

@keyframes winner-transition {
  0% {
    width: inherit;
    height: inherit;
  }

  50% {
    width: 150%;
    height: 150%;
  }

  100% {
    width: inherit;
    height: inherit;
  }
}

.loading {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 6rem;
  height: 6rem;
  border-radius: 50%;

  div {
    background-color: rgba($color: gray, $alpha: 0.5);
    box-shadow: none;
  }

  @media screen and (min-width: 48rem) {
    & {
      width: 10rem;
      height: 10rem;
    }
  }

  @media screen and (min-width: 75rem) {
    & {
      width: 15rem;
      height: 15rem;
    }
  }
}

.scissors {
  grid-column: 3 / 5;
  grid-row: 1 / 3;
}

.paper {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
}

.rock {
  grid-column: 2 / 4;
  grid-row: 3 / 5;
}

.game {
  min-height: 60vh;
  display: flex;
  justify-content: center;
  align-items: center;

  .disabled {
    display: none;
  }

  &__options {
    width: min(80vw, 25rem);
    height: min(80vw, 25rem);
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    gap: 1rem;
    background-image: url(../../images/bg-triangle.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 80%;
  }
}

.selection {
  width: 80%;
  height: 80%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
  border-radius: 50%;
  box-shadow: inset 0 0.5rem 0 0 rgba($color: #000000, $alpha: 0.3);

  img {
    width: 50%;
    height: auto;
  }
}

/* Result section */

.result {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;

  &__card {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    margin-inline: 1rem;

    span {
      font-size: 0.8rem;
      color: white;
      text-transform: uppercase;

      @media screen and (min-width: 48rem) {
        & {
          font-size: 1.2rem;
        }
      }
    }
  }

  &__final {
    width: 100%;
    height: 10rem;
    display: flex;
    align-items: center;
    flex-direction: column;

    > span {
      color: white;
      font-size: 2.5rem;
      height: 5rem;
    }

    button {
      width: 13rem;
      height: 3rem;
      border: none;
      border-radius: 0.5rem;
      background: none;
      background-color: #fff;

      &:hover {
        cursor: pointer;
      }

      span {
        color: $dark;
        font-size: 1rem;
      }
    }

    .disabled {
      opacity: 0;
    }
  }
}

/* Media Query */
@media screen and (min-width: 75rem) {
  .result {
    flex-wrap: nowrap;

    &__card {
      span {
        padding-bottom: 2rem;
        order: -1;
        font-size: 1.5rem;
      }
    }

    &__final {
      width: 17rem;
      align-self: center;
    }
  }

  #house {
    order: 1;
  }
}
